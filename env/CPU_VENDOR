#!/bin/sh

# Copyright (C) 2022 Keith "vorble"
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# CPU_VENDOR
#
# The CPU vendor. Values are blank (if unable to determine), `amd`, or `intel`.

if [ -f /proc/cpuinfo ]; then
    # Linux check.
    if grep -q vendor_id /proc/cpuinfo; then
        CPU_VENDOR="$( cat /proc/cpuinfo | grep vendor_id | grep -o ':.*' | sed 's/^: //' | uniq | head -1 )"
    else
        CPU_VENDOR=""
    fi
elif [ -x /sbin/sysctl ]; then
    # OpenBSD check. sysctl is availabe on other systems too with different
    # variable names. For some systems that don't have a CPU vendor, you will
    # get the following message on stdout (suppressed here) and a 0
    # exit status:
    #   sysctl: second level name cpuvendor in machdep.cpuvendor is invalid
    CPU_VENDOR="$( /sbin/sysctl -n machdep.cpuvendor 2> /dev/null )"
else
    echo "env/CPU_VENDOR: Unable to determine CPU vendor!" >&2
    exit 1
fi

if [ "$CPU_VENDOR" = "GenuineIntel" ]; then
    CPU_VENDOR=intel
elif [ "$CPU_VENDOR" = "AuthenticAMD" ]; then
    CPU_VENDOR=amd
elif [ "$CPU_VENDOR" = "" ]; then
    :
else
    echo "env/CPU_VENDOR: Unexpected CPU vendor $CPU_VENDOR!" >&2
    exit 1
fi

if [ "$DEBUG" != "0" ]; then
    echo "CPU_VENDOR=$CPU_VENDOR"
fi

export CPU_VENDOR
